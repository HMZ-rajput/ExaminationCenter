// <auto-generated />
using System;
using ExaminationCenter.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExaminationCenter.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20240719085952_attendencestatus")]
    partial class attendencestatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExaminationCenter.Models.Examination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bloodType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bp_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cbc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cbc_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cns")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cns_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("color_disc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("color_disc_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cvs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cvs_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dis_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fbs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fbs_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("git")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("git_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hep_b")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hep_b_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hep_c")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hep_c_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hiv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hiv_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lft")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lft_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lt_ear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lt_ear_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lt_eye")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lt_eye_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mso_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("narcotics")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("narcotics_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("others")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("others_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("psyc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("psyc_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resp_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rt_ear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rt_ear_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rt_eye")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rt_eye_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("uc_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("urine_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vocal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vocal_note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("xray")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("xray_note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("examinations");
                });

            modelBuilder.Entity("ExaminationCenter.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AttendenceTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("AttendendeStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateApplied")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Identity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("requests");
                });

            modelBuilder.Entity("ExaminationCenter.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
